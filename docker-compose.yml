version: '3.8'

services:
  jupyter:
    build: .
    ports:
      - "8888:8888"    # Jupyter Notebook
      - "2024:2024"    # LangGraph Studio
    volumes:
      - .:/app
      - jupyter-data:/root/.jupyter
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY:-}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2:-true}
      - TAVILY_API_KEY=${TAVILY_API_KEY:-}
    stdin_open: true
    tty: true
    working_dir: /app

  # 必要に応じてRedisサービスを追加（LangGraphで使用される場合）
  redis:
    image: redis:6
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 1s
      retries: 5
    profiles:
      - full  # docker-compose --profile full up で起動

  # 必要に応じてPostgreSQLサービスを追加（永続化が必要な場合）
  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: langchain_academy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      start_period: 10s
      timeout: 1s
      retries: 5
      interval: 5s
    profiles:
      - full  # docker-compose --profile full up で起動

volumes:
  jupyter-data:
  postgres-data: